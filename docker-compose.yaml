version: '3.8'

services:
  postgres:
    image: postgis/postgis:17-3.4
    container_name: vessel_tracking_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: vessel_tracking
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - vessel_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: vessel_tracking_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vessel-tracking.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_password
      PGADMIN_CONFIG_SERVER_MODE: 'True'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin-servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      - vessel_network
    restart: unless-stopped
    depends_on:
      - postgres

  alembic:
    build:
      context: ./alembic
      dockerfile: Dockerfile
    container_name: vessel_tracking_alembic
    volumes:
      - ./alembic:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres_password@postgres:5432/vessel_tracking
    networks:
      - vessel_network
    depends_on:
      - postgres

networks:
  vessel_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
